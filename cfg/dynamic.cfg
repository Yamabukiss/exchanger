#!/usr/bin/env python3
# _*_ coding:utf-8 _*_

PACKAGE = "exchanger"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("red_lower_hsv_h",int_t, 0, "red_lower_hsv_h", 0,0, 180)
gen.add("red_upper_hsv_h",int_t, 0, "red_upper_hsv_h", 12,0, 180)

gen.add("red_lower_hsv_s",int_t, 0, "red_lower_hsv_s", 130,0, 255)
gen.add("red_upper_hsv_s",int_t, 0, "red_upper_hsv_s", 255,0, 255)

gen.add("red_lower_hsv_v",int_t, 0, "red_lower_hsv_v", 140,0, 255)
gen.add("red_upper_hsv_v",int_t, 0, "red_upper_hsv_v", 255,0, 255)

gen.add("blue_lower_hsv_h",int_t, 0, "blue_lower_hsv_h", 95,0, 180)
gen.add("blue_upper_hsv_h",int_t, 0, "blue_upper_hsv_h", 118,0, 180)

gen.add("blue_lower_hsv_s",int_t, 0, "blue_lower_hsv_s", 135,0, 255)
gen.add("blue_upper_hsv_s",int_t, 0, "blue_upper_hsv_s", 255,0, 255)

gen.add("blue_lower_hsv_v",int_t, 0, "blue_lower_hsv_v", 100,0, 255)
gen.add("blue_upper_hsv_v",int_t, 0, "blue_upper_hsv_v", 255,0, 255)

size_enum = gen.enum([ gen.const("MORPH_ERODE",      int_t, 0, "0"),
					   gen.const("MORPH_DILATE",     int_t, 1, "1"),
					   gen.const("MORPH_OPEN",     int_t, 2, "2"),
					   gen.const("MORPH_CLOSE",     int_t, 3, "3"),
					   gen.const("MORPH_GRADIENT",     int_t, 4, "4"),
					   gen.const("MORPH_TOPHAT",      int_t, 5, "5"),
					   gen.const("MORPH_BLACKHAT",      int_t, 6, "6"),
					   gen.const("MORPH_HITMISS",      int_t, 7, "7")],
					   "An enum to set morph type")

gen.add("morph_type", int_t, 0, "morph_type", 1, 0, 7, edit_method=size_enum)
gen.add("morph_iterations",int_t, 0, "morph_iterations", 2,1, 10)
gen.add("morph_size", int_t, 0, "morph_size", 1, 0, 4)

gen.add("arrow_area_threshold", int_t, 0, "arrow_area_threshold", 12011, 1000, 60000)
gen.add("min_triangle_threshold", int_t, 0, "min_triangle_threshold", 500, 100, 60000)
gen.add("max_variance_threshold", int_t, 0, "max_variance_threshold", 6000, 0, 10000)
gen.add("triangle_approx_epsilon", int_t, 0, "triangle_approx_epsilon", 41, 1, 100)
gen.add("triangle_moment_bias",double_t, 0, "triangle_moment_bias", 3.0, 0.0, 5.0)
gen.add("small_offset",double_t, 0, "small_offset", 0.014, 0.0, 0.1)

gen.add("is_show_center",bool_t, 0, "is_show_center", True)
gen.add("x_offset",double_t, 0, "x_offset", 0.80, 0.0, 1.5)
gen.add("y_offset",double_t, 0, "y_offset", 0., -1.5, 1.5)
gen.add("z_offset",double_t, 0, "z_offset", 0., 0.0, 1.5)
gen.add("roll_offset",double_t, 0, "roll_offset", 0., -1.578, 1.578)
gen.add("pitch_offset",double_t, 0, "pitch_offset", 0., -1.578, 1.578)
gen.add("yaw_offset",double_t, 0, "yaw_offset", 0., -1.578, 1.578)

gen.add("save_on",bool_t,0,"save_on",False)

exit(gen.generate(PACKAGE, "exchanger_node", "dynamic"))
